{"version":3,"sources":["components/Header.js","components/MainView.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","dropdownBtn","color","Header","themeColor","setThemeColor","themes","classes","useState","anchorEl","setAnchorEl","onSelectTheme","themecolor","grey","blue","green","orange","purple","console","log","document","getElementById","innerHTML","className","AppBar","style","Toolbar","Typography","variant","noWrap","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","openMenu","id","Menu","keepMounted","open","Boolean","onClose","MenuItem","paragraphStyle","fontSize","margin","searchBtn","MainView","deviceWidth","cityInfo","SetCityInfo","cityName","SetcityName","useEffect","a","url","fetch","response","json","responseJson","FetchApi","buttonColor","Container","currentWeatherHolder","Card","CardContent","TextField","label","cod","src","weather","icon","alt","message","description","main","temp","wind","speed","humidity","sys","country","CardActions","value","ThemeColors","Blue","Grey","Green","DeepOrange","Purple","App","window","innerWidth","screensize","setScreensize","onresize","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4988775e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100% auto\",\r\n  },\r\n  dropdownBtn: {\r\n    color: \"#ffffff\",\r\n  },\r\n}));\r\n\r\nexport default function Header({ themeColor, setThemeColor, themes }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const openMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onSelectTheme = (themecolor) => {\r\n    setAnchorEl(null);\r\n    if (themecolor === \"DARK\") {\r\n      setThemeColor(themes.grey)\r\n    } else if (themecolor === \"BLUE\") {\r\n      setThemeColor(themes.blue)\r\n    } else if (themecolor === \"GREEN\") {\r\n      setThemeColor(themes.green)\r\n    } else if (themecolor === \"ORANGE\") {\r\n      setThemeColor(themes.orange)\r\n    } else if (themecolor === \"PURPLE\") {\r\n      setThemeColor(themes.purple)\r\n    } else {\r\n      console.log(\"No theme found with the color\", themecolor)\r\n    }\r\n    document.getElementById(\"dropdownBtnText\").innerHTML = themecolor;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <AppBar style={{ backgroundColor: themeColor }} position=\"static\">\r\n            <Toolbar>\r\n              <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                Weather App\r\n              </Typography>\r\n              <div className={classes.search}>\r\n                  <Button\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={(event) => openMenu(event)}\r\n                  >\r\n                      <Typography id=\"dropdownBtnText\" className={classes.dropdownBtn}>BLUE</Typography>\r\n                      <ArrowDropDownIcon />\r\n                  </Button>\r\n                  <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                  >\r\n                      <MenuItem onClick={() => onSelectTheme(\"DARK\")}>DARK</MenuItem>\r\n                      <MenuItem onClick={() => onSelectTheme(\"BLUE\")}>BLUE</MenuItem>\r\n                      <MenuItem onClick={() => onSelectTheme(\"GREEN\")}>GREEN</MenuItem>\r\n                      <MenuItem onClick={() => onSelectTheme(\"PURPLE\")}>PURPLE</MenuItem>\r\n                      <MenuItem onClick={() => onSelectTheme(\"ORANGE\")}>ORANGE</MenuItem>\r\n                  </Menu>\r\n              </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paragraphStyle: {\r\n    fontSize: \"25px\",\r\n    margin: \"5px 0px\",\r\n  },\r\n  searchBtn: {\r\n    marginLeft: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function MainView({ themeColor, deviceWidth }) {\r\n  const classes = useStyles();\r\n  const [cityInfo, SetCityInfo] = useState(null);\r\n  const [cityName, SetcityName] = useState(\"Wan Chai\");\r\n  const API_KEY = \"375a63cc369dd4b4ebcf4e7418d37a35\";\r\n\r\n  useEffect(() => {\r\n    const FetchApi = async () => {\r\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${API_KEY}`;\r\n      const response = await fetch(url);\r\n      const responseJson = await response.json();\r\n      SetCityInfo(responseJson);\r\n    };\r\n    FetchApi();\r\n  }, [cityName])\r\n\r\n  const buttonColor = {\r\n    backgroundColor: themeColor,\r\n    color: \"#ffffff\",\r\n  };\r\n\r\n  const Container = {\r\n    width: deviceWidth,\r\n    margin: \"10px auto\",\r\n  };\r\n\r\n  const currentWeatherHolder = {\r\n    width: deviceWidth,\r\n    margin: \"10px auto\",\r\n  };\r\n\r\n  return (\r\n    <Card style={Container} variant=\"outlined\">\r\n        <CardContent>\r\n            <TextField id=\"input-city\" style={{width: \"100%\"}} label=\"Enter Any City Name\" variant=\"outlined\" />\r\n            <div style={currentWeatherHolder}>\r\n              <center>\r\n                { (cityInfo != null && cityInfo.cod === 200) && <img width=\"150px\" src={\"https://openweathermap.org/img/wn/\" + cityInfo.weather[0].icon + \"@2x.png\"} alt=\"Weather Icon\" />}\r\n                { cityInfo !== null ? \r\n                    cityInfo.cod !== 200 ? \r\n                      <p className={classes.paragraphStyle}>{cityInfo.message}</p> \r\n                      : <>\r\n                        <p className={classes.paragraphStyle}> Weather: {cityInfo.weather[0].description}</p>\r\n                        <p className={classes.paragraphStyle}> Temperature: {cityInfo.main.temp + \"℃\"}</p>\r\n                        <p className={classes.paragraphStyle}> Wind Speed: {cityInfo.wind.speed}</p>\r\n                        <p className={classes.paragraphStyle}> Humidity: {cityInfo.main.humidity}</p>\r\n                        <p className={classes.paragraphStyle}> City: {cityName + \" ,\" + cityInfo.sys.country}</p>\r\n                        </>\r\n                  : \"unknown error\"\r\n                }\r\n              </center>\r\n            </div>\r\n        </CardContent>\r\n        <CardActions>\r\n            <Button\r\n              className={classes.searchBtn}\r\n              variant=\"contained\"\r\n              style={buttonColor}\r\n              onClick={() => SetcityName(document.getElementById(\"input-city\").value)}\r\n            >\r\n              Search\r\n            </Button>\r\n        </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport MainView from \"./components/MainView\";\nimport Blue from \"@material-ui/core/colors/blue\";\nimport Grey from \"@material-ui/core/colors/grey\";\nimport Green from \"@material-ui/core/colors/green\";\nimport DeepOrange from \"@material-ui/core/colors/deepOrange\";\nimport Purple from \"@material-ui/core/colors/purple\";\n\nconst ThemeColors = {\n  blue: Blue[500],\n  grey: Grey[900],\n  green: Green[600],\n  orange: DeepOrange[600],\n  purple: Purple[600],\n};\n\nfunction App() {\n  const [themeColor, setThemeColor] = useState(ThemeColors.blue);\n  const [screensize, setScreensize] = useState(window.innerWidth);\n  window.onresize = () => setScreensize(window.innerWidth);\n  document.body.style.backgroundColor = \"#e8e8e8\"\n\n  const DeviceVersion = () => {\n    if (screensize <= 1336) {\n        return \"98%\"; // For Mobile\n    }\n    else {\n        return \"50%\"; // For Desktop/Bigger Screen\n    }\n  }\n\n  return (\n    <>\n      <Header themeColor={themeColor} setThemeColor={setThemeColor} themes={ThemeColors} />\n      <MainView themeColor={themeColor} deviceWidth={DeviceVersion()} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}